Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/lightBlue\"\r\n    tools:context=\".MainActivity\">\r\n    <TextView\r\n        android:id = \"@+id/start_title\"\r\n        android:layout_width=\"270dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_gravity=\"center\"\r\n        android:background=\"@drawable/rounded_corner\"\r\n        android:padding=\"10dp\"\r\n        android:textColor=\"@color/black\"\r\n        android:ems=\"10\"\r\n        android:textSize=\"18sp\"\r\n        android:textAlignment=\"center\"\r\n        android:text = \"@string/start_title\"\r\n        app:layout_constraintBottom_toTopOf=\"@id/enter_login_info\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        />\r\n    <TextView\r\n        android:id = \"@+id/enter_login_info\"\r\n        android:layout_width=\"270dp\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_gravity=\"center\"\r\n        android:padding=\"10dp\"\r\n        android:textColor=\"@color/black\"\r\n        android:ems=\"10\"\r\n        android:textSize=\"18sp\"\r\n        android:textAlignment=\"center\"\r\n        android:text =\"@string/enter_login_info\"\r\n        android:background=\"@drawable/rect_border\"\r\n        app:layout_constraintBottom_toTopOf=\"@id/linear\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/start_title\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        />\r\n    <LinearLayout\r\n        android:id=\"@+id/linear\"\r\n        android:layout_width=\"270dp\"\r\n        android:layout_height=\"413dp\"\r\n        android:layout_margin=\"50dp\"\r\n        android:orientation=\"vertical\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintWidth_percent=\".8\">\r\n        <EditText\r\n            android:id=\"@+id/editText\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:autofillHints=\"host\"\r\n            android:background=\"@drawable/rect_border\"\r\n            android:ems=\"10\"\r\n            android:hint=\"@string/host\"\r\n            android:inputType=\"textPersonName\"\r\n            android:padding=\"10dp\"\r\n            android:textColor=\"@color/black\"\r\n            android:textColorHint=\"@color/black\"\r\n            app:layout_constraintWidth_percent=\".8\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/portField\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"22dp\"\r\n            android:autofillHints=\"port\"\r\n            android:background=\"@drawable/rect_border\"\r\n            android:ems=\"10\"\r\n            android:hint=\"@string/port\"\r\n            android:inputType=\"textPersonName\"\r\n            android:padding=\"10dp\"\r\n            android:textColor=\"@color/black\"\r\n            android:textColorHint=\"@color/black\"\r\n            app:layout_constraintHorizontal_bias=\"0.5\"\r\n            app:layout_constraintWidth_percent=\".8\"\r\n            tools:text=\"@string/defaultPort\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/usernameField\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"22dp\"\r\n            android:autofillHints=\"username\"\r\n            android:background=\"@drawable/rect_border\"\r\n            android:ems=\"10\"\r\n            android:hint=\"@string/username\"\r\n            android:inputType=\"textPersonName\"\r\n            android:padding=\"10dp\"\r\n            android:textColor=\"@color/black\"\r\n            android:textColorHint=\"@color/black\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/passwordField\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.5\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/portField\"\r\n            app:layout_constraintWidth_percent=\".8\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/passwordField\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"22dp\"\r\n            android:autofillHints=\"password\"\r\n            android:background=\"@drawable/rect_border\"\r\n            android:ems=\"10\"\r\n            android:hint=\"@string/password\"\r\n            android:inputType=\"textPassword\"\r\n            android:padding=\"10dp\"\r\n            android:textColor=\"@color/black\"\r\n            android:textColorHint=\"@color/black\"\r\n            app:layout_constraintWidth_percent=\".8\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button\"\r\n            android:layout_width=\"194dp\"\r\n            android:layout_height=\"61dp\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_marginTop=\"69dp\"\r\n            android:layout_marginBottom=\"373dp\"\r\n            android:background=\"@color/green\"\r\n            android:onClick=\"authenticate\"\r\n            android:textColor=\"@color/black\"\r\n            android:text= \"@string/login\"\r\n            />\r\n    </LinearLayout>\r\n    <ImageView\r\n        android:id = \"@+id/start_logo\"\r\n        android:layout_width=\"125dp\"\r\n        android:layout_height=\"125dp\"\r\n        android:src=\"@drawable/caci\"\r\n        android:contentDescription=\"@string/caci_image_desc\"\r\n        android:layout_marginBottom=\"30dp\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/linear\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision fa2708423793094202a36cde782c03eb0bdc001e)
+++ app/src/main/res/layout/activity_main.xml	(date 1625173816037)
@@ -52,6 +52,7 @@
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toTopOf="parent"
         app:layout_constraintWidth_percent=".8">
+
         <EditText
             android:id="@+id/editText"
             android:layout_width="match_parent"
@@ -128,9 +129,9 @@
             android:layout_marginBottom="373dp"
             android:background="@color/green"
             android:onClick="authenticate"
-            android:textColor="@color/black"
-            android:text= "@string/login"
-            />
+            android:text="@string/login"
+            android:textColor="@color/black" />
+
     </LinearLayout>
     <ImageView
         android:id = "@+id/start_logo"
@@ -145,4 +146,18 @@
         app:layout_constraintBottom_toBottomOf="parent"
         />
 
+    <Button
+        android:id="@+id/test_button"
+        android:layout_width="60dp"
+        android:layout_height="39dp"
+        android:layout_marginEnd="8dp"
+        android:onClick="test"
+        android:text="@string/test_button"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.971"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.606" />
+
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <string name=\"app_name\">gfg_ssh</string>\r\n    <string name=\"host\">Host</string>\r\n    <string name=\"port\">Port</string>\r\n    <string name=\"defaultPort\">22</string>\r\n    <string name=\"username\">Username</string>\r\n    <string name=\"password\">Password</string>\r\n    <string name=\"button_send\">SEND</string>\r\n    <string name=\"login\"><b>Login</b></string>\r\n    <string name = \"SNR_up\"><u>SNR Up</u><br/>25.1</string>\r\n    <string name = \"SNR_down\"><u>SNR Down</u><br/>25.1</string>\r\n    <string name = \"peak_SNR_up\"><u>Peak SNR Up</u><br/>25.1</string>\r\n    <string name = \"peak_SNR_down\"><u>Peak SNR Down</u><br/>25.1</string>\r\n    <string name = \"avg_pwr_up\"><u>AVG PWR Up</u><br/>25.1</string>\r\n    <string name = \"avg_pwr_down\"><u>AVG PWR Down</u><br/>25.1</string>\r\n    <string name = \"peak_PWR_up\"><u>Peak PWR Up</u><br/>25.1</string>\r\n    <string name = \"peak_pwr_down\"><u>Peak PWR Down</u><br/>25.1</string>\r\n    <string name = \"start_stop\"><b>Start/Stop</b></string>\r\n    <string name = \"export\"><b>Export</b></string>\r\n    <string name = \"switch_config\"><b>Switch Configurations</b></string>\r\n    <string name = \"cur_sector\"><b><u>Current Sector</u></b><br/>Weslaco</string>\r\n    <string name = \"sector\">Sector</string>\r\n    <string name = \"tower\">Tower</string>\r\n    <string name = \"ok\"><b>OK</b></string>\r\n    <string name = \"coverageTitle\"><b><u>CACI Radio Coverage Statistics</u></b></string>\r\n    <string name = \"stat_title\"><b>Statistics</b></string>\r\n    <string name = \"start_title\"><b><u>CACI Radio Coverage Testing</u></b></string>\r\n    <string name = \"caci_image_desc\">CACI Logo</string>\r\n    <string name = \"enter_login_info\"><b>Enter Login Information Below</b></string>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision fa2708423793094202a36cde782c03eb0bdc001e)
+++ app/src/main/res/values/strings.xml	(date 1625173816040)
@@ -27,4 +27,5 @@
     <string name = "start_title"><b><u>CACI Radio Coverage Testing</u></b></string>
     <string name = "caci_image_desc">CACI Logo</string>
     <string name = "enter_login_info"><b>Enter Login Information Below</b></string>
+    <string name = "test_button"><b>Test</b></string>
 </resources>
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.radiocoveragetesting\">\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\">\r\n        <activity android:name=\".MainActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".sshActivity\">\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision fa2708423793094202a36cde782c03eb0bdc001e)
+++ app/src/main/AndroidManifest.xml	(date 1624993265170)
@@ -18,6 +18,8 @@
         </activity>
         <activity android:name=".sshActivity">
         </activity>
+        <activity android:name=".testingActivity">
+        </activity>
     </application>
 
 </manifest>
\ No newline at end of file
Index: app/src/main/java/com/example/radiocoveragetesting/testingActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.radiocoveragetesting;\r\n\r\npublic class testingActivity {\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/radiocoveragetesting/testingActivity.java	(revision fa2708423793094202a36cde782c03eb0bdc001e)
+++ app/src/main/java/com/example/radiocoveragetesting/testingActivity.java	(date 1625172307492)
@@ -1,4 +1,288 @@
 package com.example.radiocoveragetesting;
 
-public class testingActivity {
+import android.content.Context;
+import android.content.Intent;
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.HandlerThread;
+import android.os.Looper;
+import android.util.Log;
+import android.widget.Button;
+import android.widget.TextView;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import org.apache.sshd.client.SshClient;
+import org.apache.sshd.client.channel.ClientChannel;
+import org.apache.sshd.client.session.ClientSession;
+import org.apache.sshd.common.channel.Channel;
+import org.apache.sshd.common.channel.exception.SshChannelOpenException;
+import org.apache.sshd.server.forward.AcceptAllForwardingFilter;
+import java.io.ByteArrayOutputStream;
+import java.io.IOException;
+import java.io.OutputStream;
+import java.util.ArrayList;
+import java.util.Objects;
+import java.util.concurrent.TimeUnit;
+
+public class testingActivity extends AppCompatActivity {
+
+    TextView snrUp;
+    TextView snrDown;
+    TextView peakSnrUp;
+    TextView peakSnrDown;
+    TextView avgPwrUp;
+    TextView avgPwrDown;
+    TextView peakPwrUp;
+    TextView peakPwrDown;
+    Button startStop;
+    Button export;
+    String host, username, password;
+    Integer port;
+    Handler sshHandler;
+    ClientSession sshSession;
+    ClientChannel sshChannel;
+    ByteArrayOutputStream responseStream;
+    Runnable updater;
+    SshClient client;
+    Handler mainHandler;
+    ByteArrayOutputStream errStream;
+    private boolean justStarted;
+
+
+
+    protected void onCreate(Bundle savedInstanceState) {
+        Log.d("test", "the testingActivity works");
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_testing);
+
+        Intent intent = getIntent();
+
+        snrUp = findViewById(R.id.SNR_Up);
+        snrDown = findViewById(R.id.SNR_Down);
+        peakSnrUp = findViewById(R.id.peak_SNR_up);
+        peakSnrDown = findViewById(R.id.peak_SNR_down);
+        avgPwrUp = findViewById(R.id.avg_PWR_up);
+        avgPwrDown = findViewById(R.id.avg_PWR_down);
+        peakPwrUp = findViewById(R.id.peak_PWR_up);
+        peakPwrDown = findViewById(R.id.peak_PWR_down);
+        startStop = findViewById(R.id.start_stop);
+        export = findViewById(R.id.export);
+
+        //get login cred from intent
+        host = intent.getStringExtra("host");
+        port = Integer.parseInt(intent.getStringExtra("port"));
+        username = intent.getStringExtra("username");
+        password = intent.getStringExtra("password");
+
+        //I don't get what this does, but the code breaks without it
+        // Setting user.com property manually
+        // since isn't set by default in android
+        String key = "user.home";
+        Context sysContext;
+        sysContext = getApplicationContext();
+        String val = sysContext.getApplicationInfo().dataDir;
+        System.setProperty(key, val);
+
+
+
+
+        // Creating a client instance
+        client = SshClient.setUpDefaultClient();
+        client.setForwardingFilter(AcceptAllForwardingFilter.INSTANCE);
+        client.start();
+        //mainHandler allows a background thread to access main thread and update ui
+        //mainHandler = new Handler();
+
+
+
+        HandlerThread thread = new HandlerThread("MyHandlerThread");
+        thread.start();
+        //sshHandler allows main thread to post runnable to background thread
+        sshHandler = new Handler(thread.getLooper());
+
+        //make a runnable to establish ssh session in background
+        Runnable establishSsh = new Runnable() {
+            @Override
+            public void run() {
+                try {
+                    establishSshSession();
+                }
+                catch (Exception e) {
+                    System.out.println("issue 1");
+                    e.printStackTrace();
+                }
+            }
+        };
+
+        //activate the said runnable in background
+        sshHandler.post(establishSsh);
+
+        System.out.println("ssh established");
+        mainHandler = new Handler(Looper.getMainLooper());
+
+        //create another runnable, for updates
+        updater = new Runnable() {
+            @Override
+            public void run() {
+                ArrayList<String> stat = fetchStats();
+
+                Runnable myRunnable = new Runnable() {
+                    @Override
+                    public void run() {
+                        updateStat(stat);
+                        System.out.println("myRunnable running");
+                    }
+                };
+
+                mainHandler.post(myRunnable);
+                sshHandler.postDelayed(updater,1000);
+            }
+        };
+        System.out.println("start update");
+        sshHandler.post(updater);
+
+    }
+
+    /**
+     * Updates stat TextViews
+     * Make sure to post it to mainHandler if using it in background
+     * @param stat ArrayList of stats
+     */
+    private void updateStat(ArrayList<String> stat) {
+
+        System.out.println("updateStat() running");
+
+        if (stat.size() > 7) {
+
+            snrUp.setText(stat.get(0));
+            snrDown.setText(stat.get(1));
+            peakSnrUp.setText(stat.get(2));
+            peakSnrDown.setText(stat.get(3));
+            avgPwrUp.setText(stat.get(4));
+            avgPwrDown.setText(stat.get(5));
+            peakPwrUp.setText(stat.get(6));
+            peakPwrDown.setText(stat.get(7));
+        }
+
+    }
+
+
+    /**
+     * Obtains the current stats and returns it
+     * currently uses the command "go"
+     * @return Array of list of strings that contain signal stat
+     */
+    private ArrayList<String> fetchStats() {
+        //change the command to new command that returns current stats later
+        String command = "go\n";
+        System.out.println("fetchStats() running)");
+        ArrayList<String> ans = new ArrayList<>();
+        try {
+
+            // Open channel
+            sshChannel.open().verify(5, TimeUnit.SECONDS);
+            sshSession.resetIdleTimeout();
+
+            try {
+                OutputStream pipedIn = sshChannel.getInvertedIn();
+                pipedIn.write(command.getBytes());
+                System.out.println("sending command");
+                pipedIn.flush();
+                pipedIn.close();
+            }
+            catch (Exception e) {
+                e.printStackTrace();
+            }
+
+            //You gotta capture the string rather than
+            //scan it with scanner line-by-line because the stream constantly adds more
+            String responseString = new String(responseStream.toByteArray());
+            System.out.println("response string: \n" + responseString);
+            //break down the string into lines
+            String[] response = responseString.trim().split("\n");
+
+            //if this is first time the method is running since ssh connection
+            //was established, the output format will be wrong, so skip it once
+            if(!justStarted) {
+                //find the line containing the info we want
+                String answerLine = response[response.length - 2];
+                System.out.println("Testing line: " + answerLine);//show it to log to manually check
+                //formatting the string
+                String[] answerArray = answerLine.split(",");
+
+                //I just did response 4-11 because I don't know the actual format of stats
+                ans.add(answerArray[4]);  //snrUp
+                ans.add(answerArray[5]);  //snrDown
+                ans.add(answerArray[6]);  //peakSnrUp
+                ans.add(answerArray[7]);  //peakSnrDown
+                ans.add(answerArray[8]);  //avgPwrUp
+                ans.add(answerArray[9]);  //avgPwrDown
+                ans.add(answerArray[10]); //peakPwrUp
+                ans.add(answerArray[11]); //peakPwrDown
+            }
+            justStarted = false;
+        }
+        catch (Exception e) {
+            System.out.println("error in opening channel or getting response at fetchStat()");
+            if(e instanceof SshChannelOpenException && Objects.requireNonNull(e.getMessage()).trim().equals(
+                    "open failed")) {
+                sshChannel.close(true);
+                sshSession.close(true);
+                try {
+                    responseStream.close();
+                }
+                catch (IOException e2) {
+                    e2.printStackTrace();
+                }
+                try {
+                    errStream.close();
+                }
+                catch (IOException e2) {
+                    e2.printStackTrace();
+                }
+                establishSshSession();
+                fetchStats();
+
+            }
+            System.out.println("stacktrace for why first attempt failed");
+            e.printStackTrace();
+        }
+        return ans;
+    }
+
+    /**
+     * Establishes sshSession
+     * Pretty sure that you need to call it in background thread.
+     * use sshHandler.post() to run it in background
+     * @return true if session is successfully established, else false
+     */
+    private boolean establishSshSession(){
+
+        try {
+            sshSession = client.connect(username, host, port).verify(10000).getSession();
+            sshSession.addPasswordIdentity(password);
+            sshSession.auth().verify(50000);
+            sshChannel = sshSession.createChannel(Channel.CHANNEL_SHELL);
+            responseStream = new ByteArrayOutputStream();
+            sshChannel.setOut(responseStream);
+            //set error stream
+            errStream = new ByteArrayOutputStream();
+            sshChannel.setErr(errStream);
+            justStarted = true;
+            return true;
+        }
+        catch (Exception e) {
+            System.out.println("failed to establish session");
+            e.printStackTrace();
+            return false;
+        }
+    }
+
+    @Override
+    protected void onDestroy() {
+        super.onDestroy();
+        sshHandler.removeCallbacksAndMessages(null);
+        sshHandler.getLooper().quit();
+    }
 }
Index: app/src/main/java/com/example/radiocoveragetesting/sshActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.radiocoveragetesting;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport org.apache.sshd.client.SshClient;\r\nimport org.apache.sshd.client.channel.ClientChannel;\r\nimport org.apache.sshd.client.channel.ClientChannelEvent;\r\nimport org.apache.sshd.client.session.ClientSession;\r\nimport org.apache.sshd.common.channel.Channel;\r\nimport org.apache.sshd.server.forward.AcceptAllForwardingFilter;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.IOException;\r\nimport java.io.OutputStream;\r\nimport java.util.EnumSet;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\npublic class sshActivity extends AppCompatActivity {\r\n\r\n    ClientChannel channel;\r\n    TextView shellOutput;\r\n    String host, username, password;\r\n    Integer port;\r\n    String command;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_ssh);\r\n        System.out.println(\"lol\");\r\n        // set output field\r\n        shellOutput = findViewById(R.id.textView);\r\n\r\n        // Get user credentials from indent\r\n        Intent intent = getIntent();\r\n        host = intent.getStringExtra(\"host\");\r\n        port = Integer.parseInt(intent.getStringExtra(\"port\"));\r\n        username = intent.getStringExtra(\"username\");\r\n        password = intent.getStringExtra(\"password\");\r\n\r\n        // Command which will be executed\r\n        command = \"pwd\\n\";\r\n\r\n        // Setting user.com property manually \r\n        // since isn't set by default in android\r\n        String key = \"user.home\";\r\n        Context Syscontext;\r\n        Syscontext = getApplicationContext();\r\n        String val = Syscontext.getApplicationInfo().dataDir;\r\n        System.setProperty(key, val);\r\n\r\n        // Creating a client instance\r\n        final SshClient client = SshClient.setUpDefaultClient();\r\n        client.setForwardingFilter(AcceptAllForwardingFilter.INSTANCE);\r\n        client.start();\r\n\r\n        // Starting new thread because network processes \r\n        // can interfere with UI if started in main thread\r\n        Thread thread = new Thread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                try {\r\n                    // Connection establishment and authentication\r\n                    try (ClientSession session = client.connect(username, host, port).verify(10000).getSession()) {\r\n                        session.addPasswordIdentity(password);\r\n                        session.auth().verify(50000);\r\n                        System.out.println(\"Connection establihed\");\r\n\r\n                        // Create a channel to communicate\r\n                        channel = session.createChannel(Channel.CHANNEL_SHELL);\r\n                        System.out.println(\"Starting shell\");\r\n\r\n                        ByteArrayOutputStream responseStream = new ByteArrayOutputStream();\r\n                        channel.setOut(responseStream);\r\n\r\n                        // Open channel\r\n                        channel.open().verify(5, TimeUnit.SECONDS);\r\n                        try (OutputStream pipedIn = channel.getInvertedIn()) {\r\n                            pipedIn.write(command.getBytes());\r\n                            pipedIn.flush();\r\n                        }\r\n\r\n                        // Close channel\r\n                        channel.waitFor(EnumSet.of(ClientChannelEvent.CLOSED),\r\n                                TimeUnit.SECONDS.toMillis(5));\r\n\r\n                        // Output after converting to string type\r\n                        String responseString = new String(responseStream.toByteArray());\r\n                        System.out.println(responseString);\r\n                        shellOutput.setText(responseString);\r\n\r\n                    } catch (IOException e) {\r\n                        System.out.println(\"lol1\");\r\n                        e.printStackTrace();\r\n                    } finally {\r\n                        System.out.println(\"lol2\");\r\n                        client.stop();\r\n                    }\r\n                } catch (Exception e) {\r\n                    System.out.println(\"lol3\");\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n        thread.start();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/radiocoveragetesting/sshActivity.java	(revision fa2708423793094202a36cde782c03eb0bdc001e)
+++ app/src/main/java/com/example/radiocoveragetesting/sshActivity.java	(date 1625154697269)
@@ -20,6 +20,7 @@
 import java.util.EnumSet;
 import java.util.concurrent.TimeUnit;
 
+
 public class sshActivity extends AppCompatActivity {
 
     ClientChannel channel;
@@ -36,7 +37,7 @@
         // set output field
         shellOutput = findViewById(R.id.textView);
 
-        // Get user credentials from indent
+        // Get user credentials from intent
         Intent intent = getIntent();
         host = intent.getStringExtra("host");
         port = Integer.parseInt(intent.getStringExtra("port"));
@@ -94,6 +95,25 @@
                         System.out.println(responseString);
                         shellOutput.setText(responseString);
 
+                        //lets try looping this to test how quick session closed
+                        // Open channel 2nd time
+                        // channel.open().verify(5, TimeUnit.SECONDS);
+                        command = "go\n";
+                        try (OutputStream pipedIn = channel.getInvertedIn()) {
+                            pipedIn.write(command.getBytes());
+                            pipedIn.flush();
+                        }
+
+                        // Close channel
+                        channel.waitFor(EnumSet.of(ClientChannelEvent.CLOSED),
+                                TimeUnit.SECONDS.toMillis(5));
+                        // Output after converting to string type
+                        String responseString2 = new String(responseStream.toByteArray());
+                        System.out.println(responseString2);
+                        shellOutput.setText(responseString2);
+
+
+
                     } catch (IOException e) {
                         System.out.println("lol1");
                         e.printStackTrace();
Index: app/src/main/java/com/example/radiocoveragetesting/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.radiocoveragetesting;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        Button login = findViewById(R.id.button);\r\n        login.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                authenticate(v);\r\n            }\r\n        });\r\n    }\r\n\r\n    public void authenticate(View view) {\r\n\r\n        // Create an intent for sshActivity\r\n        Intent intent = new Intent(this, sshActivity.class);\r\n\r\n        // Declare fields\r\n        EditText editText = (EditText) findViewById(R.id.editText);\r\n        EditText portField = (EditText) findViewById(R.id.portField);\r\n        EditText usernameField = (EditText) findViewById(R.id.usernameField);\r\n        EditText passwordField = (EditText) findViewById(R.id.passwordField);\r\n\r\n        // Get input data from fields\r\n        String host = editText.getText().toString();\r\n        String port = portField.getText().toString();\r\n        String username = usernameField.getText().toString();\r\n        String password = passwordField.getText().toString();\r\n\r\n        // Pass on data to sshActivity via intent\r\n        intent.putExtra(\"host\", host);\r\n        intent.putExtra(\"port\", port);\r\n        intent.putExtra(\"username\", username);\r\n        intent.putExtra(\"password\", password);\r\n        startActivity(intent);\r\n        finish();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/radiocoveragetesting/MainActivity.java	(revision fa2708423793094202a36cde782c03eb0bdc001e)
+++ app/src/main/java/com/example/radiocoveragetesting/MainActivity.java	(date 1624992122485)
@@ -44,6 +44,32 @@
         String username = usernameField.getText().toString();
         String password = passwordField.getText().toString();
 
+        // Pass on data to sshActivity via intent
+        intent.putExtra("host", host);
+        intent.putExtra("port", port);
+        intent.putExtra("username", username);
+        intent.putExtra("password", password);
+        startActivity(intent);
+        finish();
+    }
+
+    public void test(View view) {
+
+        // Create an intent for sshActivity
+        Intent intent = new Intent(this, testingActivity.class);
+
+        // Declare fields
+        EditText editText = (EditText) findViewById(R.id.editText);
+        EditText portField = (EditText) findViewById(R.id.portField);
+        EditText usernameField = (EditText) findViewById(R.id.usernameField);
+        EditText passwordField = (EditText) findViewById(R.id.passwordField);
+
+        // Get input data from fields
+        String host = editText.getText().toString();
+        String port = portField.getText().toString();
+        String username = usernameField.getText().toString();
+        String password = passwordField.getText().toString();
+
         // Pass on data to sshActivity via intent
         intent.putExtra("host", host);
         intent.putExtra("port", port);
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Thu Jun 17 14:26:25 EDT 2021\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-5.6.4-all.zip\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- gradle/wrapper/gradle-wrapper.properties	(revision fa2708423793094202a36cde782c03eb0bdc001e)
+++ gradle/wrapper/gradle-wrapper.properties	(date 1624901636679)
@@ -3,4 +3,4 @@
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-5.6.4-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-6.7.1-all.zip
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\n\r\nandroid {\r\n    compileSdkVersion 29\r\n    buildToolsVersion \"29.0.3\"\r\n    android {\r\n        packagingOptions {\r\n            exclude 'META-INF/DEPENDENCIES'\r\n            exclude 'META-INF/LICENSE'\r\n            exclude 'META-INF/LICENSE.txt'\r\n            exclude 'META-INF/license.txt'\r\n            exclude 'META-INF/NOTICE'\r\n            exclude 'META-INF/NOTICE.txt'\r\n            exclude 'META-INF/notice.txt'\r\n            exclude 'META-INF/ASL2.0'\r\n            exclude(\"META-INF/*.kotlin_module\")\r\n        }\r\n        compileOptions {\r\n            sourceCompatibility JavaVersion.VERSION_1_8\r\n            targetCompatibility JavaVersion.VERSION_1_8\r\n        }\r\n    }\r\n    defaultConfig {\r\n        applicationId \"com.example.radiocoveragetesting\"\r\n        minSdkVersion 22\r\n        targetSdkVersion 29\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.1.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'\r\n    implementation 'org.apache.mina:mina-core:3.0.0-M2'\r\n    implementation 'org.apache.sshd:sshd-core:2.1.0'\r\n    implementation 'org.apache.sshd:sshd-putty:2.1.0'\r\n    implementation 'org.apache.sshd:sshd-common:2.1.0'\r\n    implementation 'org.slf4j:slf4j-api:1.7.5'\r\n    implementation 'org.slf4j:slf4j-simple:1.6.4'\r\n    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.1'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision fa2708423793094202a36cde782c03eb0bdc001e)
+++ app/build.gradle	(date 1624901636658)
@@ -37,7 +37,13 @@
         }
     }
 
+    packagingOptions {
+        exclude 'META-INF/DEPENDENCIES'
+    }
+
 }
+
+
 
 dependencies {
     implementation fileTree(dir: 'libs', include: ['*.jar'])
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/jarRepositories.xml	(date 1624901636672)
+++ .idea/jarRepositories.xml	(date 1624901636672)
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="BintrayJCenter" />
+      <option name="name" value="BintrayJCenter" />
+      <option name="url" value="https://jcenter.bintray.com/" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="Google" />
+      <option name="name" value="Google" />
+      <option name="url" value="https://dl.google.com/dl/android/maven2/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\n\r\nbuildscript {\r\n    \r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        \r\n    }\r\n    dependencies {\r\n        classpath 'com.android.tools.build:gradle:3.6.3'\r\n        \r\n\r\n        // NOTE: Do not place your application dependencies here; they belong\r\n        // in the individual module build.gradle files\r\n    }\r\n}\r\n\r\nallprojects {\r\n    repositories {\r\n        google()\r\n        jcenter()\r\n        \r\n    }\r\n}\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision fa2708423793094202a36cde782c03eb0bdc001e)
+++ build.gradle	(date 1624901636666)
@@ -8,7 +8,7 @@
         
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:3.6.3'
+        classpath 'com.android.tools.build:gradle:4.2.1'
         
 
         // NOTE: Do not place your application dependencies here; they belong
@@ -27,3 +27,5 @@
 task clean(type: Delete) {
     delete rootProject.buildDir
 }
+
+
